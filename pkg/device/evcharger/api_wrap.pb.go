// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package evcharger

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// WrapApi	adapts a evcharger.EVChargerApiServer	and presents it as a evcharger.EVChargerApiClient
func WrapApi(server EVChargerApiServer) EVChargerApiClient {
	return &apiWrapper{server}
}

type apiWrapper struct {
	server EVChargerApiServer
}

// compile time check that we implement the interface we need
var _ EVChargerApiClient = (*apiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *apiWrapper) UnwrapServer() EVChargerApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *apiWrapper) Unwrap() interface{} {
	return w.UnwrapServer()
}

func (w *apiWrapper) PlugIn(ctx context.Context, req *PlugInRequest, _ ...grpc.CallOption) (*PlugInResponse, error) {
	return w.server.PlugIn(ctx, req)
}

func (w *apiWrapper) ChargeStart(ctx context.Context, req *ChargeStartRequest, _ ...grpc.CallOption) (*ChargeStartResponse, error) {
	return w.server.ChargeStart(ctx, req)
}

func (w *apiWrapper) Unplug(ctx context.Context, req *UnplugRequest, _ ...grpc.CallOption) (*UnplugResponse, error) {
	return w.server.Unplug(ctx, req)
}
